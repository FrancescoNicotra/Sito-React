{"ast":null,"code":"import React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\nimport Text from './Text';\nimport { usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\n\nconst Avatar = _ref => {\n  let {\n    label,\n    image,\n    icon,\n    size = 56,\n    color = 'secondary',\n    tintColor,\n    initials = true,\n    uppercase = true,\n    autoColor = false,\n    style,\n    contentContainerStyle,\n    imageContainerStyle,\n    labelStyle,\n    imageStyle\n  } = _ref;\n  const palette = usePaletteColor(autoColor ? getColor(typeof label === 'string' ? label : '') : color, tintColor);\n  const styles = useStyles(() => ({\n    container: {\n      width: size,\n      height: size,\n      backgroundColor: palette.main,\n      borderRadius: size / 2\n    },\n    contentContainer: { ...StyleSheet.absoluteFillObject,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    label: {\n      fontSize: size / 2,\n      color: palette.on,\n      textTransform: uppercase ? 'uppercase' : 'none'\n    },\n    image: {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    }\n  }), [size, uppercase, palette]);\n\n  const getLabel = () => {\n    switch (typeof label) {\n      case 'string':\n        return /*#__PURE__*/React.createElement(Text, {\n          variant: \"h6\",\n          style: [styles.label, labelStyle]\n        }, initials ? getInitials(label) : label);\n\n      case 'function':\n        return label({\n          color: palette.on\n        });\n\n      default:\n        return label;\n    }\n  };\n\n  const getImage = () => {\n    if (!image || /*#__PURE__*/React.isValidElement(image)) return image;\n    if (typeof image === 'function') return image({\n      size\n    });\n    return /*#__PURE__*/React.createElement(Image, {\n      source: image,\n      style: [styles.image, imageStyle]\n    });\n  };\n\n  const getIcon = () => {\n    if (typeof icon === 'function') return icon({\n      color: palette.on,\n      size: size / 2\n    });\n    return icon;\n  };\n\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, style]\n  }, (label || icon) && /*#__PURE__*/React.createElement(View, {\n    style: [styles.contentContainer, contentContainerStyle]\n  }, label ? getLabel() : icon && getIcon()), image && /*#__PURE__*/React.createElement(View, {\n    style: [StyleSheet.absoluteFillObject, imageContainerStyle]\n  }, getImage()));\n};\n\nfunction getColor(label) {\n  let hash = 0;\n  let i;\n\n  for (i = 0; i < label.length; i += 1) {\n    hash = label.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n\n  return color;\n}\n\nfunction getInitials(label) {\n  const namesArray = label.trim().split(' ');\n  if (namesArray.length === 1) return `${namesArray[0].charAt(0)}`;else return `${namesArray[0].charAt(0)}${namesArray[namesArray.length - 1].charAt(0)}`;\n}\n\nexport default Avatar;","map":{"version":3,"mappings":"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","names":["React","Image","StyleSheet","View","Text","usePaletteColor","useStyles","Avatar","_ref","label","image","icon","size","color","tintColor","initials","uppercase","autoColor","style","contentContainerStyle","imageContainerStyle","labelStyle","imageStyle","palette","getColor","styles","container","width","height","backgroundColor","main","borderRadius","contentContainer","absoluteFillObject","justifyContent","alignItems","fontSize","on","textTransform","getLabel","variant","getInitials","getImage","isValidElement","source","getIcon","hash","i","length","charCodeAt","value","toString","substr","namesArray","trim","split","charAt"],"sources":["/home/francecsco/Scrivania/Sito-React/node_modules/@react-native-material/core/lib/module/Avatar.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Image,\n  ImageSourcePropType,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Text from './Text';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface AvatarProps {\n  label?: string | React.ReactElement | ((props: { color: string }) => React.ReactElement | null) | null;\n\n  image?: ImageSourcePropType | React.ReactElement | ((props: { size: number }) => React.ReactElement | null) | null;\n\n  icon?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  size?: number;\n\n  color?: Color;\n\n  tintColor?: Color;\n\n  initials?: boolean;\n\n  uppercase?: boolean;\n\n  autoColor?: boolean;\n\n  style?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  imageContainerStyle?: StyleProp<ViewStyle>;\n\n  labelStyle?: StyleProp<TextStyle>;\n\n  imageStyle?: StyleProp<ImageStyle>;\n}\n\nconst Avatar: React.FC<AvatarProps> = ({\n  label,\n  image,\n  icon,\n  size = 56,\n  color = 'secondary',\n  tintColor,\n  initials = true,\n  uppercase = true,\n  autoColor = false,\n  style,\n  contentContainerStyle,\n  imageContainerStyle,\n  labelStyle,\n  imageStyle,\n}) => {\n  const palette = usePaletteColor(autoColor ? getColor(typeof label === 'string' ? label : '') : color, tintColor);\n\n  const styles = useStyles(\n    () => ({\n      container: {\n        width: size,\n        height: size,\n        backgroundColor: palette.main,\n        borderRadius: size / 2,\n      },\n      contentContainer: {\n        ...StyleSheet.absoluteFillObject,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      label: {\n        fontSize: size / 2,\n        color: palette.on,\n        textTransform: uppercase ? 'uppercase' : 'none',\n      },\n      image: {\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n      },\n    }),\n    [size, uppercase, palette]\n  );\n\n  const getLabel = () => {\n    switch (typeof label) {\n      case 'string':\n        return (\n          <Text variant=\"h6\" style={[styles.label, labelStyle]}>\n            {initials ? getInitials(label) : label}\n          </Text>\n        );\n      case 'function':\n        return label({ color: palette.on });\n      default:\n        return label;\n    }\n  };\n\n  const getImage = () => {\n    if (!image || React.isValidElement(image)) return image;\n    if (typeof image === 'function') return image({ size });\n    return <Image source={image} style={[styles.image, imageStyle]} />;\n  };\n\n  const getIcon = () => {\n    if (typeof icon === 'function') return icon({ color: palette.on, size: size / 2 });\n    return icon;\n  };\n\n  return (\n    <View style={[styles.container, style]}>\n      {(label || icon) && (\n        <View style={[styles.contentContainer, contentContainerStyle]}>{label ? getLabel() : icon && getIcon()}</View>\n      )}\n      {image && <View style={[StyleSheet.absoluteFillObject, imageContainerStyle]}>{getImage()}</View>}\n    </View>\n  );\n};\n\nfunction getColor(label: string) {\n  let hash = 0;\n  let i;\n  for (i = 0; i < label.length; i += 1) {\n    hash = label.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let color = '#';\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  return color;\n}\n\nfunction getInitials(label: string) {\n  const namesArray = label.trim().split(' ');\n  if (namesArray.length === 1) return `${namesArray[0].charAt(0)}`;\n  else return `${namesArray[0].charAt(0)}${namesArray[namesArray.length - 1].charAt(0)}`;\n}\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}