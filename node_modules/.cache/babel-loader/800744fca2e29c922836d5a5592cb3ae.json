{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport Surface from './Surface';\nimport Text from './Text';\nimport { useSurfaceColorValue } from './hooks/use-surface-color';\nimport { usePaletteColor } from './hooks/use-palette-color';\nimport { useTheme } from './base/ThemeContext';\n\nconst AppBar = _ref => {\n  let {\n    variant = 'top',\n    title,\n    subtitle,\n    centerTitle = false,\n    leading,\n    trailing,\n    color = 'primary',\n    tintColor,\n    transparent = false,\n    enableColorOnDark = false,\n    style,\n    contentContainerStyle,\n    titleContentStyle,\n    titleStyle,\n    subtitleStyle,\n    leadingContainerStyle,\n    trailingContainerStyle,\n    children,\n    ...props\n  } = _ref;\n  const theme = useTheme();\n  const surfaceColor = useSurfaceColorValue(variant === 'top' ? 4 : 8);\n  const palette = usePaletteColor(theme.colorScheme === 'dark' && !enableColorOnDark ? surfaceColor : color, tintColor);\n  const titleElement = typeof title === 'string' ? /*#__PURE__*/React.createElement(Text, {\n    variant: \"h6\",\n    style: [{\n      color: palette.on\n    }, titleStyle]\n  }, title) : typeof title === 'function' ? title({\n    color: palette.on\n  }) : title;\n  const subtitleElement = typeof subtitle === 'string' ? /*#__PURE__*/React.createElement(Text, {\n    variant: \"caption\",\n    style: [{\n      color: palette.on\n    }, subtitleStyle]\n  }, subtitle) : typeof subtitle === 'function' ? subtitle({\n    color: palette.on\n  }) : subtitle;\n  const leadingElement = typeof leading === 'function' ? leading({\n    color: palette.on,\n    size: 24\n  }) : leading;\n  const trailingElement = typeof trailing === 'function' ? trailing({\n    color: palette.on,\n    size: 24\n  }) : trailing;\n  return /*#__PURE__*/React.createElement(Surface, _extends({\n    style: [{\n      backgroundColor: transparent ? 'transparent' : palette.main,\n      zIndex: variant === 'top' ? 4 : 8\n    }, style],\n    elevation: transparent ? 0 : variant === 'top' ? 4 : 8\n  }, props), /*#__PURE__*/React.createElement(View, {\n    style: [styles.contentContainer, contentContainerStyle]\n  }, leadingElement && /*#__PURE__*/React.createElement(View, {\n    style: [styles.leadingContainer, leadingContainerStyle]\n  }, leadingElement), /*#__PURE__*/React.createElement(View, {\n    style: [centerTitle ? [StyleSheet.absoluteFill, styles.centeredTitleContainer] : styles.titleContainer, titleContentStyle],\n    pointerEvents: centerTitle ? 'none' : undefined\n  }, titleElement, subtitleElement), trailingElement && /*#__PURE__*/React.createElement(View, {\n    style: [styles.trailingContainer, trailingContainerStyle]\n  }, trailingElement)), children);\n};\n\nconst styles = StyleSheet.create({\n  contentContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: Platform.select({\n      ios: 44,\n      web: 64,\n      default: 56\n    }),\n    paddingHorizontal: 16\n  },\n  leadingContainer: {\n    marginStart: -12,\n    marginEnd: 20\n  },\n  trailingContainer: {\n    marginStart: 20,\n    marginEnd: -12\n  },\n  titleContainer: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  centeredTitleContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default AppBar;","map":{"version":3,"mappings":"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","names":["React","Platform","StyleSheet","View","Surface","Text","useSurfaceColorValue","usePaletteColor","useTheme","AppBar","_ref","variant","title","subtitle","centerTitle","leading","trailing","color","tintColor","transparent","enableColorOnDark","style","contentContainerStyle","titleContentStyle","titleStyle","subtitleStyle","leadingContainerStyle","trailingContainerStyle","children","props","theme","surfaceColor","palette","colorScheme","titleElement","on","subtitleElement","leadingElement","size","trailingElement","backgroundColor","main","zIndex","elevation","styles","contentContainer","leadingContainer","absoluteFill","centeredTitleContainer","titleContainer","pointerEvents","undefined","trailingContainer","create","flexDirection","justifyContent","alignItems","height","select","ios","web","default","paddingHorizontal","marginStart","marginEnd","flex"],"sources":["/home/francecsco/Scrivania/Sito-React/node_modules/@react-native-material/core/lib/module/AppBar.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform, StyleProp, StyleSheet, TextStyle, View, ViewStyle } from 'react-native';\nimport Surface, { SurfaceProps } from './Surface';\nimport Text from './Text';\nimport { useSurfaceColorValue } from './hooks/use-surface-color';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface AppBarProps extends SurfaceProps {\n  /**\n   * Whether you want to place the AppBar at the top or the bottom of the screen.\n   *\n   * @default \"top\"\n   */\n  variant?: 'top' | 'bottom';\n\n  /**\n   * The primary text to display in the AppBar.\n   */\n  title?: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * The secondary text to display in the AppBar.\n   */\n  subtitle?: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * Whether the `title` and `subtitle` should be centered.\n   *\n   * @default false\n   */\n  centerTitle?: boolean;\n\n  /**\n   * The element displayed before the `title`.\n   */\n  leading?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The element displayed after the `title`.\n   */\n  trailing?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The fill color of the AppBar's background.\n   *\n   * @default \"primary\"\n   */\n  color?: Color;\n\n  /**\n   * The color of the AppBar's content (title, subtitle, icons, etc.).\n   */\n  tintColor?: Color;\n\n  /**\n   * Whether the AppBar's background is transparent.\n   *\n   * @default false\n   */\n  transparent?: boolean;\n\n  /**\n   * If `true`, the `color` prop will be applied in dark mode.\n   *\n   * @default false\n   */\n  enableColorOnDark?: boolean;\n\n  /**\n   * The style of the content container view.\n   */\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the title and subtitle container view.\n   */\n  titleContentStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the title text.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the subtitle text.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the leading element container view.\n   */\n  leadingContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the trailing element container view.\n   */\n  trailingContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst AppBar: React.FC<AppBarProps> = ({\n  variant = 'top',\n  title,\n  subtitle,\n  centerTitle = false,\n  leading,\n  trailing,\n  color = 'primary',\n  tintColor,\n  transparent = false,\n  enableColorOnDark = false,\n  style,\n  contentContainerStyle,\n  titleContentStyle,\n  titleStyle,\n  subtitleStyle,\n  leadingContainerStyle,\n  trailingContainerStyle,\n  children,\n  ...props\n}) => {\n  const theme = useTheme();\n\n  const surfaceColor = useSurfaceColorValue(variant === 'top' ? 4 : 8);\n\n  const palette = usePaletteColor(theme.colorScheme === 'dark' && !enableColorOnDark ? surfaceColor : color, tintColor);\n\n  const titleElement =\n    typeof title === 'string' ? (\n      <Text variant=\"h6\" style={[{ color: palette.on }, titleStyle]}>\n        {title}\n      </Text>\n    ) : typeof title === 'function' ? (\n      title({ color: palette.on })\n    ) : (\n      title\n    );\n\n  const subtitleElement =\n    typeof subtitle === 'string' ? (\n      <Text variant=\"caption\" style={[{ color: palette.on }, subtitleStyle]}>\n        {subtitle}\n      </Text>\n    ) : typeof subtitle === 'function' ? (\n      subtitle({ color: palette.on })\n    ) : (\n      subtitle\n    );\n\n  const leadingElement = typeof leading === 'function' ? leading({ color: palette.on, size: 24 }) : leading;\n\n  const trailingElement = typeof trailing === 'function' ? trailing({ color: palette.on, size: 24 }) : trailing;\n\n  return (\n    <Surface\n      style={[\n        {\n          backgroundColor: transparent ? 'transparent' : palette.main,\n          zIndex: variant === 'top' ? 4 : 8,\n        },\n        style,\n      ]}\n      elevation={transparent ? 0 : variant === 'top' ? 4 : 8}\n      {...props}\n    >\n      <View style={[styles.contentContainer, contentContainerStyle]}>\n        {leadingElement && <View style={[styles.leadingContainer, leadingContainerStyle]}>{leadingElement}</View>}\n        <View\n          style={[\n            centerTitle ? [StyleSheet.absoluteFill, styles.centeredTitleContainer] : styles.titleContainer,\n            titleContentStyle,\n          ]}\n          pointerEvents={centerTitle ? 'none' : undefined}\n        >\n          {titleElement}\n          {subtitleElement}\n        </View>\n        {trailingElement && <View style={[styles.trailingContainer, trailingContainerStyle]}>{trailingElement}</View>}\n      </View>\n      {children}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: Platform.select({ ios: 44, web: 64, default: 56 }),\n    paddingHorizontal: 16,\n  },\n  leadingContainer: {\n    marginStart: -12,\n    marginEnd: 20,\n  },\n  trailingContainer: {\n    marginStart: 20,\n    marginEnd: -12,\n  },\n  titleContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  centeredTitleContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default AppBar;\n"]},"metadata":{},"sourceType":"module"}