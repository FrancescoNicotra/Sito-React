{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Text as RNText } from 'react-native';\nimport { useTheme } from './base/ThemeContext';\nimport { usePaletteColor } from './hooks/use-palette-color';\n\nconst Text = _ref => {\n  let {\n    variant = 'body1',\n    color = 'on-background',\n    style,\n    ...rest\n  } = _ref;\n  const {\n    typography\n  } = useTheme();\n  const palette = usePaletteColor(color);\n  return /*#__PURE__*/React.createElement(RNText, _extends({}, rest, {\n    style: [typography[variant], {\n      color: palette.main\n    }, style]\n  }));\n};\n\nexport default Text;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,MAAjB,QAAyD,cAAzD;AACA,SAA4BC,QAA5B,QAA4C,qBAA5C;AACA,SAAgBC,eAAhB,QAAuC,2BAAvC;;AAkBA,MAAMH,IAAyB,GAAGI,QAAoE;EAAA,IAAnE;IAAEC,OAAO,GAAG,OAAZ;IAAqBC,KAAK,GAAG,eAA7B;IAA8CC,KAA9C;IAAqD,GAAGC;EAAxD,IAAmEJ;EACpG,MAAM;IAAEK;EAAF,IAAiBP,QAAQ,EAA/B;EACA,MAAMQ,OAAO,GAAGP,eAAe,CAACG,KAAD,CAA/B;EAEA,oBAAOP,oBAACE,MAAD,eAAYO,IAAZ;IAAkBD,KAAK,EAAE,CAACE,UAAU,CAACJ,OAAD,CAAX,EAAsB;MAAEC,KAAK,EAAEI,OAAO,CAACC;IAAjB,CAAtB,EAA+CJ,KAA/C;EAAzB,GAAP;AAJF;;AAOA,eAAeP,IAAf","names":["React","Text","RNText","useTheme","usePaletteColor","_ref","variant","color","style","rest","typography","palette","main"],"sources":["/home/francecsco/Scrivania/sito-web/node_modules/@react-native-material/core/lib/module/Text.tsx"],"sourcesContent":["import React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { TypographyVariant, useTheme } from './base/ThemeContext';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\n\nexport interface TextProps extends RNTextProps {\n  /**\n   * The variant of the text.\n   *\n   * @default \"body1\"\n   */\n  variant?: TypographyVariant;\n\n  /**\n   * The color of the text.\n   *\n   * @default \"on-background\"\n   */\n  color?: Color;\n}\n\nconst Text: React.FC<TextProps> = ({ variant = 'body1', color = 'on-background', style, ...rest }) => {\n  const { typography } = useTheme();\n  const palette = usePaletteColor(color);\n\n  return <RNText {...rest} style={[typography[variant], { color: palette.main }, style]} />;\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}