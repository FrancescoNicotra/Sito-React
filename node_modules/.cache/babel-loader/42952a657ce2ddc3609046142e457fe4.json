{"ast":null,"code":"import React from 'react';\nimport { View } from 'react-native';\nimport Text from './Text';\nimport Divider from './Divider';\nimport { useStyles } from './hooks/use-styles';\n\nconst Banner = _ref => {\n  let {\n    text,\n    illustration,\n    buttons,\n    style,\n    contentContainerStyle,\n    illustrationContainerStyle,\n    textContainerStyle,\n    textStyle,\n    actionsContainerStyle\n  } = _ref;\n  const styles = useStyles(_ref2 => {\n    let {\n      palette\n    } = _ref2;\n    return {\n      container: {\n        backgroundColor: palette.surface.main\n      },\n      contentContainer: {\n        flexDirection: 'row',\n        marginTop: 24,\n        marginBottom: 4,\n        marginHorizontal: 16\n      },\n      illustrationContainer: {\n        marginEnd: 16\n      },\n      textContainer: {\n        flex: 1\n      },\n      text: {\n        color: palette.surface.on\n      },\n      actionsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        margin: 8\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, style]\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.contentContainer, contentContainerStyle]\n  }, illustration && /*#__PURE__*/React.createElement(View, {\n    style: [styles.illustrationContainer, illustrationContainerStyle]\n  }, typeof illustration === 'function' ? illustration({\n    size: 40\n  }) : illustration), /*#__PURE__*/React.createElement(View, {\n    style: [styles.textContainer, textContainerStyle]\n  }, typeof text === 'string' ? /*#__PURE__*/React.createElement(Text, {\n    variant: \"body2\",\n    style: [styles.text, textStyle]\n  }, text) : text)), /*#__PURE__*/React.createElement(View, {\n    style: [styles.actionsContainer, actionsContainerStyle]\n  }, Array.isArray(buttons) ? buttons.map((button, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index\n  }, button, index !== buttons.length - 1 && /*#__PURE__*/React.createElement(View, {\n    style: {\n      width: 8\n    }\n  }))) : buttons), /*#__PURE__*/React.createElement(Divider, null));\n};\n\nexport default Banner;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA+BC,IAA/B,QAAsD,cAAtD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAsBA,MAAMC,MAA6B,GAAGC,QAUhC;EAAA,IAViC;IACrCC,IADqC;IAErCC,YAFqC;IAGrCC,OAHqC;IAIrCC,KAJqC;IAKrCC,qBALqC;IAMrCC,0BANqC;IAOrCC,kBAPqC;IAQrCC,SARqC;IASrCC;EATqC,IAUjCT;EACJ,MAAMU,MAAM,GAAGZ,SAAS,CACtBa;IAAA,IAAC;MAAEC;IAAF,IAADD;IAAA,OAAkB;MAChBE,SAAS,EAAE;QACTC,eAAe,EAAEF,OAAO,CAACG,OAARH,CAAgBI;MADxB,CADK;MAIhBC,gBAAgB,EAAE;QAChBC,aAAa,EAAE,KADC;QAEhBC,SAAS,EAAE,EAFK;QAGhBC,YAAY,EAAE,CAHE;QAIhBC,gBAAgB,EAAE;MAJF,CAJF;MAUhBC,qBAAqB,EAAE;QACrBC,SAAS,EAAE;MADU,CAVP;MAahBC,aAAa,EAAE;QACbC,IAAI,EAAE;MADO,CAbC;MAgBhBxB,IAAI,EAAE;QACJyB,KAAK,EAAEd,OAAO,CAACG,OAARH,CAAgBe;MADnB,CAhBU;MAmBhBC,gBAAgB,EAAE;QAChBV,aAAa,EAAE,KADC;QAEhBW,cAAc,EAAE,UAFA;QAGhBC,UAAU,EAAE,QAHI;QAIhBC,MAAM,EAAE;MAJQ;IAnBF,CAAlB;EADsB,GA2BtB,EA3BsB,CAAxB;EA8BA,oBACErC,oBAACC,IAAD;IAAMS,KAAK,EAAE,CAACM,MAAM,CAACG,SAAR,EAAmBT,KAAnB;EAAb,gBACEV,oBAACC,IAAD;IAAMS,KAAK,EAAE,CAACM,MAAM,CAACO,gBAAR,EAA0BZ,qBAA1B;EAAb,GACGH,YAAY,iBACXR,oBAACC,IAAD;IAAMS,KAAK,EAAE,CAACM,MAAM,CAACY,qBAAR,EAA+BhB,0BAA/B;EAAb,GACG,OAAOJ,YAAP,KAAwB,UAAxB,GAAqCA,YAAY,CAAC;IAAE8B,IAAI,EAAE;EAAR,CAAD,CAAjD,GAAkE9B,YADrE,CAFJ,eAMER,oBAACC,IAAD;IAAMS,KAAK,EAAE,CAACM,MAAM,CAACc,aAAR,EAAuBjB,kBAAvB;EAAb,GACG,OAAON,IAAP,KAAgB,QAAhB,gBACCP,oBAACE,IAAD;IAAMqC,OAAO,EAAC,OAAd;IAAsB7B,KAAK,EAAE,CAACM,MAAM,CAACT,IAAR,EAAcO,SAAd;EAA7B,GACGP,IADH,CADD,GAKCA,IANJ,CANF,CADF,eAiBEP,oBAACC,IAAD;IAAMS,KAAK,EAAE,CAACM,MAAM,CAACkB,gBAAR,EAA0BnB,qBAA1B;EAAb,GACGyB,KAAK,CAACC,OAAND,CAAc/B,OAAd+B,IACG/B,OAAO,CAACiC,GAARjC,CAAY,CAACkC,MAAD,EAASC,KAAT,kBACV5C,oBAACA,KAAD,CAAO6C,QAAP;IAAgBC,GAAG,EAAEF;EAArB,GACGD,MADH,EAEGC,KAAK,KAAKnC,OAAO,CAACsC,MAARtC,GAAiB,CAA3BmC,iBAAgC5C,oBAACC,IAAD;IAAMS,KAAK,EAAE;MAAEsC,KAAK,EAAE;IAAT;EAAb,EAFnC,CADFvC,CADH+B,GAOG/B,OARN,CAjBF,eA2BET,oBAACG,OAAD,OA3BF,CADF;AAzCF;;AA0EA,eAAeE,MAAf","names":["React","View","Text","Divider","useStyles","Banner","_ref","text","illustration","buttons","style","contentContainerStyle","illustrationContainerStyle","textContainerStyle","textStyle","actionsContainerStyle","styles","_ref2","palette","container","backgroundColor","surface","main","contentContainer","flexDirection","marginTop","marginBottom","marginHorizontal","illustrationContainer","marginEnd","textContainer","flex","color","on","actionsContainer","justifyContent","alignItems","margin","size","variant","Array","isArray","map","button","index","Fragment","key","length","width"],"sources":["/home/francecsco/Scrivania/Sito-React/node_modules/@react-native-material/core/lib/module/Banner.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleProp, TextStyle, View, ViewStyle } from 'react-native';\nimport Text from './Text';\nimport Divider from './Divider';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface BannerProps {\n  text: string | React.ReactElement | null;\n\n  illustration?: React.ReactElement | ((props: { size: number }) => React.ReactElement | null) | null;\n\n  buttons: React.ReactElement | React.ReactElement[] | null;\n\n  style?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  illustrationContainerStyle?: StyleProp<ViewStyle>;\n\n  textContainerStyle?: StyleProp<ViewStyle>;\n\n  textStyle?: StyleProp<TextStyle>;\n\n  actionsContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst Banner: React.FC<BannerProps> = ({\n  text,\n  illustration,\n  buttons,\n  style,\n  contentContainerStyle,\n  illustrationContainerStyle,\n  textContainerStyle,\n  textStyle,\n  actionsContainerStyle,\n}) => {\n  const styles = useStyles(\n    ({ palette }) => ({\n      container: {\n        backgroundColor: palette.surface.main,\n      },\n      contentContainer: {\n        flexDirection: 'row',\n        marginTop: 24,\n        marginBottom: 4,\n        marginHorizontal: 16,\n      },\n      illustrationContainer: {\n        marginEnd: 16,\n      },\n      textContainer: {\n        flex: 1,\n      },\n      text: {\n        color: palette.surface.on,\n      },\n      actionsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        margin: 8,\n      },\n    }),\n    []\n  );\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={[styles.contentContainer, contentContainerStyle]}>\n        {illustration && (\n          <View style={[styles.illustrationContainer, illustrationContainerStyle]}>\n            {typeof illustration === 'function' ? illustration({ size: 40 }) : illustration}\n          </View>\n        )}\n        <View style={[styles.textContainer, textContainerStyle]}>\n          {typeof text === 'string' ? (\n            <Text variant=\"body2\" style={[styles.text, textStyle]}>\n              {text}\n            </Text>\n          ) : (\n            text\n          )}\n        </View>\n      </View>\n      <View style={[styles.actionsContainer, actionsContainerStyle]}>\n        {Array.isArray(buttons)\n          ? buttons.map((button, index) => (\n              <React.Fragment key={index}>\n                {button}\n                {index !== buttons.length - 1 && <View style={{ width: 8 }} />}\n              </React.Fragment>\n            ))\n          : buttons}\n      </View>\n      <Divider />\n    </View>\n  );\n};\n\nexport default Banner;\n"]},"metadata":{},"sourceType":"module"}