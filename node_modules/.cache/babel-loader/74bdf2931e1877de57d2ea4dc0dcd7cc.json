{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useCallback, useState } from 'react';\nimport { Animated, Easing, Platform, Pressable as RNPressable, StyleSheet, View } from 'react-native';\nimport chroma from 'chroma-js';\nimport { usePaletteColor } from './hooks/use-palette-color';\n\nconst Pressable = _ref => {\n  let {\n    pressEffect = Platform.select({\n      android: 'android-ripple',\n      web: 'ripple',\n      default: 'highlight'\n    }),\n    pressEffectColor = 'on-background',\n    onLayout,\n    onPressIn,\n    onPressOut,\n    onFocus,\n    onBlur,\n    android_ripple,\n    onMouseEnter,\n    onMouseLeave,\n    children,\n    ...rest\n  } = _ref;\n  const {\n    main: color\n  } = usePaletteColor(pressEffectColor);\n  const [size, setSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [ripples, setRipples] = useState([]);\n  const handleLayout = useCallback(event => {\n    const {\n      width,\n      height\n    } = event.nativeEvent.layout;\n    setSize({\n      width,\n      height\n    });\n    onLayout === null || onLayout === void 0 ? void 0 : onLayout(event);\n  }, [onLayout]);\n  const [pressed, setPressed] = useState(false);\n  const handlePressIn = useCallback(event => {\n    setPressed(true);\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(event);\n\n    if (pressEffect === 'ripple') {\n      const {\n        locationX,\n        locationY\n      } = event.nativeEvent;\n      const x = (locationX !== null && locationX !== void 0 ? locationX : size.width / 2) - 0.5;\n      const y = (locationY !== null && locationY !== void 0 ? locationY : size.height / 2) - 0.5;\n      const scale = new Animated.Value(0);\n      const opacity = new Animated.Value(1);\n      const ripple = {\n        key: `${Date.now() + Math.random()}`,\n        style: {\n          start: x,\n          top: y,\n          transform: [{\n            scale\n          }],\n          opacity\n        }\n      };\n      setRipples(prevState => [...prevState, ripple]);\n      Animated.timing(scale, {\n        toValue: Math.max(size.width * 1.25 + Math.abs(size.width / 2 - x) * 2, size.height * 1.25 + Math.abs(size.height / 2 - y) * 2),\n        easing: Easing.out(Easing.ease),\n        duration: 400,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [onPressIn, pressEffect, size]);\n  const handlePressOut = useCallback(event => {\n    setPressed(false);\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(event);\n\n    if (pressEffect === 'ripple') {\n      Animated.timing(ripples[ripples.length - 1].style.opacity, {\n        toValue: 0,\n        easing: Easing.out(Easing.ease),\n        duration: 400,\n        useNativeDriver: false\n      }).start(() => {\n        setRipples(prevState => prevState.slice(1));\n      });\n    }\n  }, [pressEffect, ripples, onPressOut]);\n  const [focused, setFocused] = useState(false);\n  const handleFocus = useCallback(event => {\n    setFocused(true);\n    onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);\n  }, [onFocus]);\n  const handleBlur = useCallback(event => {\n    setFocused(false);\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);\n  }, [onBlur]);\n  const [hovered, setHovered] = useState(false);\n  const handleMouseEnter = useCallback(event => {\n    setHovered(true);\n    onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(event);\n  }, [onMouseEnter]);\n  const handleMouseLeave = useCallback(event => {\n    setHovered(false);\n    onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(event);\n  }, [onMouseLeave]);\n  return /*#__PURE__*/React.createElement(RNPressable, _extends({\n    android_ripple: pressEffect === 'android-ripple' ? android_ripple !== null && android_ripple !== void 0 ? android_ripple : {\n      color: chroma(color).alpha(0.26).hex()\n    } : undefined,\n    onLayout: handleLayout,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave\n  }, rest), /*#__PURE__*/React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      backgroundColor: hovered && !rest.disabled ? chroma(color).alpha(0.04).hex() : 'transparent'\n    }, {\n      transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n    }]\n  }), focused && !rest.disabled && /*#__PURE__*/React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      backgroundColor: chroma(color).alpha(0.12).hex()\n    }]\n  }), pressEffect === 'highlight' && pressed && /*#__PURE__*/React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      backgroundColor: chroma(color).alpha(0.26).hex()\n    }]\n  }), pressEffect === 'ripple' && ripples.length !== 0 && /*#__PURE__*/React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.effectContainer]\n  }, ripples.map(ripple => /*#__PURE__*/React.createElement(Animated.View, {\n    key: ripple.key,\n    style: [styles.ripple, {\n      backgroundColor: chroma(color).alpha(0.1).hex()\n    }, ripple.style]\n  }))), children);\n};\n\nconst styles = StyleSheet.create({\n  effectContainer: {\n    overflow: 'hidden'\n  },\n  ripple: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    borderRadius: 0.5\n  }\n});\nexport default Pressable;","map":{"version":3,"mappings":"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","names":["React","useCallback","useState","Animated","Easing","Platform","Pressable","RNPressable","StyleSheet","View","chroma","usePaletteColor","_ref","pressEffect","select","android","web","default","pressEffectColor","onLayout","onPressIn","onPressOut","onFocus","onBlur","android_ripple","onMouseEnter","onMouseLeave","children","rest","main","color","size","setSize","width","height","ripples","setRipples","handleLayout","event","nativeEvent","layout","pressed","setPressed","handlePressIn","locationX","locationY","x","y","scale","Value","opacity","ripple","key","Date","now","Math","random","style","start","top","transform","prevState","timing","toValue","max","abs","easing","out","ease","duration","useNativeDriver","handlePressOut","length","slice","focused","setFocused","handleFocus","handleBlur","hovered","setHovered","handleMouseEnter","handleMouseLeave","alpha","hex","undefined","absoluteFill","backgroundColor","disabled","transition","styles","effectContainer","map","create","overflow","position","borderRadius"],"sources":["/home/francecsco/Scrivania/Sito-React/node_modules/@react-native-material/core/lib/module/Pressable.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  NativeSyntheticEvent,\n  Platform,\n  Pressable as RNPressable,\n  PressableProps as RNPressableProps,\n  StyleSheet,\n  TargetedEvent,\n  View,\n} from 'react-native';\nimport chroma from 'chroma-js';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\n\nexport interface PressableProps extends RNPressableProps {\n  pressEffect?: 'none' | 'highlight' | 'ripple' | 'android-ripple';\n\n  pressEffectColor?: Color;\n\n  onMouseEnter?: (event: NativeSyntheticEvent<TargetedEvent>) => void;\n\n  onMouseLeave?: (event: NativeSyntheticEvent<TargetedEvent>) => void;\n\n  style?: any;\n}\n\nconst Pressable: React.FC<PressableProps> = ({\n  pressEffect = Platform.select({ android: 'android-ripple', web: 'ripple', default: 'highlight' }),\n  pressEffectColor = 'on-background',\n  onLayout,\n  onPressIn,\n  onPressOut,\n  onFocus,\n  onBlur,\n  android_ripple,\n  onMouseEnter,\n  onMouseLeave,\n  children,\n  ...rest\n}) => {\n  const { main: color } = usePaletteColor(pressEffectColor);\n\n  const [size, setSize] = useState({ width: 0, height: 0 });\n\n  const [ripples, setRipples] = useState<{ key: string; style: any }[]>([]);\n\n  const handleLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      const { width, height } = event.nativeEvent.layout;\n      setSize({ width, height });\n      onLayout?.(event);\n    },\n    [onLayout]\n  );\n\n  const [pressed, setPressed] = useState(false);\n\n  const handlePressIn = useCallback(\n    (event: GestureResponderEvent) => {\n      setPressed(true);\n      onPressIn?.(event);\n\n      if (pressEffect === 'ripple') {\n        const { locationX, locationY } = event.nativeEvent;\n\n        const x = (locationX ?? size.width / 2) - 0.5;\n        const y = (locationY ?? size.height / 2) - 0.5;\n\n        const scale = new Animated.Value(0);\n        const opacity = new Animated.Value(1);\n\n        const ripple = {\n          key: `${Date.now() + Math.random()}`,\n          style: { start: x, top: y, transform: [{ scale }], opacity },\n        };\n\n        setRipples((prevState) => [...prevState, ripple]);\n\n        Animated.timing(scale, {\n          toValue: Math.max(\n            size.width * 1.25 + Math.abs(size.width / 2 - x) * 2,\n            size.height * 1.25 + Math.abs(size.height / 2 - y) * 2\n          ),\n          easing: Easing.out(Easing.ease),\n          duration: 400,\n          useNativeDriver: false,\n        }).start();\n      }\n    },\n    [onPressIn, pressEffect, size]\n  );\n\n  const handlePressOut = useCallback(\n    (event: GestureResponderEvent) => {\n      setPressed(false);\n      onPressOut?.(event);\n\n      if (pressEffect === 'ripple') {\n        Animated.timing(ripples[ripples.length - 1].style.opacity, {\n          toValue: 0,\n          easing: Easing.out(Easing.ease),\n          duration: 400,\n          useNativeDriver: false,\n        }).start(() => {\n          setRipples((prevState) => prevState.slice(1));\n        });\n      }\n    },\n    [pressEffect, ripples, onPressOut]\n  );\n\n  const [focused, setFocused] = useState(false);\n\n  const handleFocus = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setFocused(true);\n      onFocus?.(event);\n    },\n    [onFocus]\n  );\n\n  const handleBlur = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setFocused(false);\n      onBlur?.(event);\n    },\n    [onBlur]\n  );\n\n  const [hovered, setHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setHovered(true);\n      onMouseEnter?.(event);\n    },\n    [onMouseEnter]\n  );\n\n  const handleMouseLeave = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setHovered(false);\n      onMouseLeave?.(event);\n    },\n    [onMouseLeave]\n  );\n\n  return (\n    <RNPressable\n      android_ripple={\n        pressEffect === 'android-ripple' ? android_ripple ?? { color: chroma(color).alpha(0.26).hex() } : undefined\n      }\n      onLayout={handleLayout}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      {...({ onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave } as any)}\n      {...rest}\n    >\n      <View\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            backgroundColor: hovered && !rest.disabled ? chroma(color).alpha(0.04).hex() : 'transparent',\n          },\n          { transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms' } as any,\n        ]}\n      />\n\n      {focused && !rest.disabled && (\n        <View style={[StyleSheet.absoluteFill, { backgroundColor: chroma(color).alpha(0.12).hex() }]} />\n      )}\n\n      {pressEffect === 'highlight' && pressed && (\n        <View style={[StyleSheet.absoluteFill, { backgroundColor: chroma(color).alpha(0.26).hex() }]} />\n      )}\n\n      {pressEffect === 'ripple' && ripples.length !== 0 && (\n        <View style={[StyleSheet.absoluteFill, styles.effectContainer]}>\n          {ripples.map((ripple) => (\n            <Animated.View\n              key={ripple.key}\n              style={[styles.ripple, { backgroundColor: chroma(color).alpha(0.1).hex() }, ripple.style]}\n            />\n          ))}\n        </View>\n      )}\n\n      {children}\n    </RNPressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  effectContainer: {\n    overflow: 'hidden',\n  },\n  ripple: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    borderRadius: 0.5,\n  },\n});\n\nexport default Pressable;\n"]},"metadata":{},"sourceType":"module"}