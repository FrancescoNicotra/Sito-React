{"ast":null,"code":"import { useCallback, useState } from 'react';\n/**\n * React hook to manage boolean (on - off) states\n *\n * @param initialState the initial boolean state value\n */\n\nexport const useBoolean = function () {\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const [value, setValue] = useState(initialState);\n  const on = useCallback(() => {\n    setValue(true);\n  }, []);\n  const off = useCallback(() => {\n    setValue(false);\n  }, []);\n  const toggle = useCallback(() => {\n    setValue(prev => !prev);\n  }, []);\n  return [value, {\n    on,\n    off,\n    toggle\n  }];\n};","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAIA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG,YAAwC;EAAA,IAAvCC,YAAuC,uEAAV,KAAU;EAChE,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,YAAD,CAAlC;EAEA,MAAMG,EAAE,GAAGN,WAAW,CAAC,MAAM;IAC3BK,QAAQ,CAAC,IAAD,CAARA;EADoB,GAEnB,EAFmB,CAAtB;EAIA,MAAME,GAAG,GAAGP,WAAW,CAAC,MAAM;IAC5BK,QAAQ,CAAC,KAAD,CAARA;EADqB,GAEpB,EAFoB,CAAvB;EAIA,MAAMG,MAAM,GAAGR,WAAW,CAAC,MAAM;IAC/BK,QAAQ,CAAEI,IAAD,IAAU,CAACA,IAAZ,CAARJ;EADwB,GAEvB,EAFuB,CAA1B;EAIA,OAAO,CAACD,KAAD,EAAQ;IAAEE,EAAF;IAAMC,GAAN;IAAWC;EAAX,CAAR,CAAP;AAfK","names":["useCallback","useState","useBoolean","initialState","value","setValue","on","off","toggle","prev"],"sources":["/home/francecsco/Scrivania/sito-web/node_modules/@react-native-material/core/lib/module/hooks/use-boolean.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\n\ntype InitialState = boolean | (() => boolean);\n\n/**\n * React hook to manage boolean (on - off) states\n *\n * @param initialState the initial boolean state value\n */\nexport const useBoolean = (initialState: InitialState = false) => {\n  const [value, setValue] = useState(initialState);\n\n  const on = useCallback(() => {\n    setValue(true);\n  }, []);\n\n  const off = useCallback(() => {\n    setValue(false);\n  }, []);\n\n  const toggle = useCallback(() => {\n    setValue((prev) => !prev);\n  }, []);\n\n  return [value, { on, off, toggle }] as const;\n};\n"]},"metadata":{},"sourceType":"module"}