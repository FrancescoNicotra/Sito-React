{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Animated } from 'react-native';\nimport { useStyles } from './hooks/use-styles';\n\nconst Surface = _ref => {\n  let {\n    category,\n    elevation = 0,\n    style,\n    ...rest\n  } = _ref;\n  const styles = useStyles(_ref2 => {\n    let {\n      elevations,\n      shapes,\n      surfaceColor\n    } = _ref2;\n    return {\n      surface: { ...elevations[elevation],\n        ...(category ? shapes[category] : {}),\n        backgroundColor: surfaceColor(elevation).hex()\n      }\n    };\n  }, [category, elevation]);\n  return /*#__PURE__*/React.createElement(Animated.View, _extends({\n    style: [styles.surface, style]\n  }, rest));\n};\n\nexport default Surface;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAA0D,cAA1D;AAEA,SAASC,SAAT,QAA0B,oBAA1B;;AAkBA,MAAMC,OAA+B,GAAGC,QAAiD;EAAA,IAAhD;IAAEC,QAAF;IAAYC,SAAS,GAAG,CAAxB;IAA2BC,KAA3B;IAAkC,GAAGC;EAArC,IAAgDJ;EACvF,MAAMK,MAAM,GAAGP,SAAS,CACtBQ;IAAA,IAAC;MAAEC,UAAF;MAAcC,MAAd;MAAsBC;IAAtB,IAADH;IAAA,OAA2C;MACzCI,OAAO,EAAE,EACP,GAAGH,UAAU,CAACL,SAAD,CADN;QAEP,IAAID,QAAQ,GAAGO,MAAM,CAACP,QAAD,CAAT,GAAsB,EAAlC,CAFO;QAGPU,eAAe,EAAEF,YAAY,CAACP,SAAD,CAAZO,CAAwBG,GAAxBH;MAHV;IADgC,CAA3C;EADsB,GAQtB,CAACR,QAAD,EAAWC,SAAX,CARsB,CAAxB;EAWA,oBAAON,oBAACC,QAAD,CAAUgB,IAAV;IAAeV,KAAK,EAAE,CAACE,MAAM,CAACK,OAAR,EAAiBP,KAAjB;EAAtB,GAAmDC,IAAnD,EAAP;AAZF;;AAeA,eAAeL,OAAf","names":["React","Animated","useStyles","Surface","_ref","category","elevation","style","rest","styles","_ref2","elevations","shapes","surfaceColor","surface","backgroundColor","hex","View"],"sources":["/home/francecsco/Scrivania/Sito-React/node_modules/@react-native-material/core/lib/module/Surface.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, StyleProp, ViewProps, ViewStyle } from 'react-native';\nimport type { Elevation, ShapeCategory } from './base/ThemeContext';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface SurfaceProps extends Omit<ViewProps, 'style'> {\n  /**\n   * The relative size of the surface.\n   */\n  category?: ShapeCategory;\n\n  /**\n   * The elevation of the surface.\n   *\n   * @default 0\n   */\n  elevation?: Elevation;\n\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n}\n\nconst Surface: React.FC<SurfaceProps> = ({ category, elevation = 0, style, ...rest }) => {\n  const styles = useStyles(\n    ({ elevations, shapes, surfaceColor }) => ({\n      surface: {\n        ...elevations[elevation],\n        ...(category ? shapes[category] : {}),\n        backgroundColor: surfaceColor(elevation).hex(),\n      },\n    }),\n    [category, elevation]\n  );\n\n  return <Animated.View style={[styles.surface, style]} {...rest} />;\n};\n\nexport default Surface;\n"]},"metadata":{},"sourceType":"module"}