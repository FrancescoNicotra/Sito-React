{"ast":null,"code":"import React, { useEffect, useMemo, useState } from 'react';\nimport { Animated, Easing, Platform, StyleSheet, TouchableWithoutFeedback } from 'react-native';\nimport { Portal } from './base/PortalContext';\nimport Surface from './Surface';\n\nconst Dialog = _ref => {\n  let {\n    visible = false,\n    onDismiss,\n    children\n  } = _ref;\n  const [portalVisible, setPortalVisible] = useState(visible);\n  const animatedValue = useMemo(() => new Animated.Value(visible ? 1 : 0), []);\n  useEffect(() => {\n    if (visible) setPortalVisible(true);\n    Animated.timing(animatedValue, {\n      toValue: visible ? 1 : 0,\n      duration: 225,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: Platform.OS !== 'android'\n    }).start(() => {\n      if (!visible) setPortalVisible(false);\n    });\n  }, [visible]);\n  if (!portalVisible) return null;\n  return /*#__PURE__*/React.createElement(Portal, null, /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n    onPress: onDismiss\n  }, /*#__PURE__*/React.createElement(Animated.View, {\n    style: [StyleSheet.absoluteFill, styles.backdrop, {\n      opacity: animatedValue\n    }]\n  })), /*#__PURE__*/React.createElement(Animated.View, {\n    style: [StyleSheet.absoluteFill, styles.container, {\n      opacity: animatedValue\n    }],\n    pointerEvents: \"box-none\",\n    needsOffscreenAlphaCompositing: Platform.OS === 'android'\n  }, /*#__PURE__*/React.createElement(Surface, {\n    category: \"medium\",\n    elevation: 24,\n    style: [styles.surface]\n  }, children)));\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0,0,0,.5)'\n  },\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  surface: {\n    width: 280,\n    marginHorizontal: 40\n  }\n});\nexport default Dialog;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,wBAAjD,QAAiF,cAAjF;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAQA,MAAMC,MAA6B,GAAGC,QAA8C;EAAA,IAA7C;IAAEC,OAAO,GAAG,KAAZ;IAAmBC,SAAnB;IAA8BC;EAA9B,IAA6CH;EAClF,MAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAACU,OAAD,CAAlD;EAEA,MAAMK,aAAa,GAAGhB,OAAO,CAAC,MAAM,IAAIE,QAAQ,CAACe,KAAb,CAAmBN,OAAO,GAAG,CAAH,GAAO,CAAjC,CAAP,EAA4C,EAA5C,CAA7B;EAEAZ,SAAS,CAAC,MAAM;IACd,IAAIY,OAAJ,EAAaI,gBAAgB,CAAC,IAAD,CAAhBA;IAEbb,QAAQ,CAACgB,MAAThB,CAAgBc,aAAhBd,EAA+B;MAC7BiB,OAAO,EAAER,OAAO,GAAG,CAAH,GAAO,CADM;MAE7BS,QAAQ,EAAE,GAFmB;MAG7BC,MAAM,EAAElB,MAAM,CAACmB,GAAPnB,CAAWA,MAAM,CAACoB,KAAlBpB,CAHqB;MAI7BqB,eAAe,EAAEpB,QAAQ,CAACqB,EAATrB,KAAgB;IAJJ,CAA/BF,EAKGwB,KALHxB,CAKS,MAAM;MACb,IAAI,CAACS,OAAL,EAAcI,gBAAgB,CAAC,KAAD,CAAhBA;IANhB;EAHO,GAWN,CAACJ,OAAD,CAXM,CAATZ;EAaA,IAAI,CAACe,aAAL,EAAoB,OAAO,IAAP;EAEpB,oBACEhB,oBAACS,MAAD,qBACET,oBAACQ,wBAAD;IAA0BqB,OAAO,EAAEf;EAAnC,gBACEd,oBAACI,QAAD,CAAU0B,IAAV;IAAeC,KAAK,EAAE,CAACxB,UAAU,CAACyB,YAAZ,EAA0BC,MAAM,CAACC,QAAjC,EAA2C;MAAEC,OAAO,EAAEjB;IAAX,CAA3C;EAAtB,EADF,CADF,eAIElB,oBAACI,QAAD,CAAU0B,IAAV;IACEC,KAAK,EAAE,CAACxB,UAAU,CAACyB,YAAZ,EAA0BC,MAAM,CAACG,SAAjC,EAA4C;MAAED,OAAO,EAAEjB;IAAX,CAA5C,CADT;IAEEmB,aAAa,EAAC,UAFhB;IAGEC,8BAA8B,EAAEhC,QAAQ,CAACqB,EAATrB,KAAgB;EAHlD,gBAKEN,oBAACU,OAAD;IAAS6B,QAAQ,EAAC,QAAlB;IAA2BC,SAAS,EAAE,EAAtC;IAA0CT,KAAK,EAAE,CAACE,MAAM,CAACQ,OAAR;EAAjD,GACG1B,QADH,CALF,CAJF,CADF;AApBF;;AAsCA,MAAMkB,MAAM,GAAG1B,UAAU,CAACmC,MAAXnC,CAAkB;EAC/B2B,QAAQ,EAAE;IACRS,eAAe,EAAE;EADT,CADqB;EAI/BP,SAAS,EAAE;IACTQ,cAAc,EAAE,QADP;IAETC,UAAU,EAAE;EAFH,CAJoB;EAQ/BJ,OAAO,EAAE;IACPK,KAAK,EAAE,GADA;IAEPC,gBAAgB,EAAE;EAFX;AARsB,CAAlBxC,CAAf;AAcA,eAAeI,MAAf","names":["React","useEffect","useMemo","useState","Animated","Easing","Platform","StyleSheet","TouchableWithoutFeedback","Portal","Surface","Dialog","_ref","visible","onDismiss","children","portalVisible","setPortalVisible","animatedValue","Value","timing","toValue","duration","easing","out","cubic","useNativeDriver","OS","start","onPress","View","style","absoluteFill","styles","backdrop","opacity","container","pointerEvents","needsOffscreenAlphaCompositing","category","elevation","surface","create","backgroundColor","justifyContent","alignItems","width","marginHorizontal"],"sources":["/home/francecsco/Scrivania/sito-web/node_modules/@react-native-material/core/lib/module/Dialog.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Animated, Easing, Platform, StyleSheet, TouchableWithoutFeedback } from 'react-native';\nimport { Portal } from './base/PortalContext';\nimport Surface from './Surface';\n\nexport interface DialogProps {\n  visible?: boolean;\n\n  onDismiss?: () => void;\n}\n\nconst Dialog: React.FC<DialogProps> = ({ visible = false, onDismiss, children }) => {\n  const [portalVisible, setPortalVisible] = useState(visible);\n\n  const animatedValue = useMemo(() => new Animated.Value(visible ? 1 : 0), []);\n\n  useEffect(() => {\n    if (visible) setPortalVisible(true);\n\n    Animated.timing(animatedValue, {\n      toValue: visible ? 1 : 0,\n      duration: 225,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: Platform.OS !== 'android',\n    }).start(() => {\n      if (!visible) setPortalVisible(false);\n    });\n  }, [visible]);\n\n  if (!portalVisible) return null;\n\n  return (\n    <Portal>\n      <TouchableWithoutFeedback onPress={onDismiss}>\n        <Animated.View style={[StyleSheet.absoluteFill, styles.backdrop, { opacity: animatedValue }]} />\n      </TouchableWithoutFeedback>\n      <Animated.View\n        style={[StyleSheet.absoluteFill, styles.container, { opacity: animatedValue }]}\n        pointerEvents=\"box-none\"\n        needsOffscreenAlphaCompositing={Platform.OS === 'android'}\n      >\n        <Surface category=\"medium\" elevation={24} style={[styles.surface]}>\n          {children}\n        </Surface>\n      </Animated.View>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0,0,0,.5)',\n  },\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  surface: {\n    width: 280,\n    marginHorizontal: 40,\n  },\n});\n\nexport default Dialog;\n"]},"metadata":{},"sourceType":"module"}