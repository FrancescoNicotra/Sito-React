{"ast":null,"code":"import React from 'react';\nimport { View } from 'react-native';\nimport Text from './Text';\nimport Divider from './Divider';\nimport { usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\n\nconst BackdropSubheader = _ref => {\n  let {\n    title,\n    leading,\n    trailing,\n    divider = true,\n    color = 'on-surface',\n    style,\n    contentContainerStyle,\n    titleContainerStyle,\n    leadingContainerStyle,\n    trailingContainerStyle\n  } = _ref;\n  const palette = usePaletteColor(color);\n  const styles = useStyles(() => ({\n    container: {\n      marginHorizontal: 16\n    },\n    contentContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingVertical: 12\n    },\n    titleContainer: {\n      flex: 1\n    },\n    leadingContainer: {\n      marginEnd: 16\n    },\n    trailingContainer: {\n      marginStart: 16\n    }\n  }));\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, style]\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.contentContainer, contentContainerStyle]\n  }, !!leading && /*#__PURE__*/React.createElement(View, {\n    style: [styles.leadingContainer, leadingContainerStyle]\n  }, typeof leading === 'function' ? leading({\n    color: palette.main,\n    size: 24\n  }) : leading), /*#__PURE__*/React.createElement(View, {\n    style: [styles.titleContainer, titleContainerStyle]\n  }, typeof title === 'string' ? /*#__PURE__*/React.createElement(Text, {\n    variant: \"subtitle1\",\n    style: {\n      color: palette.main\n    }\n  }, title) : title), !!trailing && /*#__PURE__*/React.createElement(View, {\n    style: [styles.trailingContainer, trailingContainerStyle]\n  }, typeof trailing === 'function' ? trailing({\n    color: palette.main,\n    size: 24\n  }) : trailing)), typeof divider === 'boolean' ? divider && /*#__PURE__*/React.createElement(Divider, null) : divider);\n};\n\nexport default BackdropSubheader;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAoBC,IAApB,QAA2C,cAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAgBC,eAAhB,QAAuC,2BAAvC;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAwBA,MAAMC,iBAAmD,GAAGC,QAWtD;EAAA,IAXuD;IAC3DC,KAD2D;IAE3DC,OAF2D;IAG3DC,QAH2D;IAI3DC,OAAO,GAAG,IAJiD;IAK3DC,KAAK,GAAG,YALmD;IAM3DC,KAN2D;IAO3DC,qBAP2D;IAQ3DC,mBAR2D;IAS3DC,qBAT2D;IAU3DC;EAV2D,IAWvDV;EACJ,MAAMW,OAAO,GAAGd,eAAe,CAACQ,KAAD,CAA/B;EAEA,MAAMO,MAAM,GAAGd,SAAS,CAAC,OAAO;IAC9Be,SAAS,EAAE;MACTC,gBAAgB,EAAE;IADT,CADmB;IAI9BC,gBAAgB,EAAE;MAChBC,aAAa,EAAE,KADC;MAEhBC,UAAU,EAAE,QAFI;MAGhBC,eAAe,EAAE;IAHD,CAJY;IAS9BC,cAAc,EAAE;MACdC,IAAI,EAAE;IADQ,CATc;IAY9BC,gBAAgB,EAAE;MAChBC,SAAS,EAAE;IADK,CAZY;IAe9BC,iBAAiB,EAAE;MACjBC,WAAW,EAAE;IADI;EAfW,CAAP,CAAD,CAAxB;EAoBA,oBACE/B,oBAACC,IAAD;IAAMY,KAAK,EAAE,CAACM,MAAM,CAACC,SAAR,EAAmBP,KAAnB;EAAb,gBACEb,oBAACC,IAAD;IAAMY,KAAK,EAAE,CAACM,MAAM,CAACG,gBAAR,EAA0BR,qBAA1B;EAAb,GACG,CAAC,CAACL,OAAF,iBACCT,oBAACC,IAAD;IAAMY,KAAK,EAAE,CAACM,MAAM,CAACS,gBAAR,EAA0BZ,qBAA1B;EAAb,GACG,OAAOP,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAAC;IAAEG,KAAK,EAAEM,OAAO,CAACc,IAAjB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAAvC,GAA6ExB,OADhF,CAFJ,eAMET,oBAACC,IAAD;IAAMY,KAAK,EAAE,CAACM,MAAM,CAACO,cAAR,EAAwBX,mBAAxB;EAAb,GACG,OAAOP,KAAP,KAAiB,QAAjB,gBACCR,oBAACE,IAAD;IAAMgC,OAAO,EAAC,WAAd;IAA0BrB,KAAK,EAAE;MAAED,KAAK,EAAEM,OAAO,CAACc;IAAjB;EAAjC,GACGxB,KADH,CADD,GAKCA,KANJ,CANF,EAeG,CAAC,CAACE,QAAF,iBACCV,oBAACC,IAAD;IAAMY,KAAK,EAAE,CAACM,MAAM,CAACW,iBAAR,EAA2Bb,sBAA3B;EAAb,GACG,OAAOP,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAAC;IAAEE,KAAK,EAAEM,OAAO,CAACc,IAAjB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAAzC,GAA+EvB,QADlF,CAhBJ,CADF,EAsBG,OAAOC,OAAP,KAAmB,SAAnB,GAA+BA,OAAO,iBAAIX,oBAACG,OAAD,OAA1C,GAAwDQ,OAtB3D,CADF;AAlCF;;AA8DA,eAAeL,iBAAf","names":["React","View","Text","Divider","usePaletteColor","useStyles","BackdropSubheader","_ref","title","leading","trailing","divider","color","style","contentContainerStyle","titleContainerStyle","leadingContainerStyle","trailingContainerStyle","palette","styles","container","marginHorizontal","contentContainer","flexDirection","alignItems","paddingVertical","titleContainer","flex","leadingContainer","marginEnd","trailingContainer","marginStart","main","size","variant"],"sources":["/home/francecsco/Scrivania/Sito-React/node_modules/@react-native-material/core/lib/module/BackdropSubheader.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport Text from './Text';\nimport Divider from './Divider';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface BackdropSubheaderProps {\n  title?: string | React.ReactElement;\n\n  leading?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  trailing?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  divider?: boolean | React.ReactElement;\n\n  color?: Color;\n\n  style?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  titleContainerStyle?: StyleProp<ViewStyle>;\n\n  leadingContainerStyle?: StyleProp<ViewStyle>;\n\n  trailingContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst BackdropSubheader: React.FC<BackdropSubheaderProps> = ({\n  title,\n  leading,\n  trailing,\n  divider = true,\n  color = 'on-surface',\n  style,\n  contentContainerStyle,\n  titleContainerStyle,\n  leadingContainerStyle,\n  trailingContainerStyle,\n}) => {\n  const palette = usePaletteColor(color);\n\n  const styles = useStyles(() => ({\n    container: {\n      marginHorizontal: 16,\n    },\n    contentContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingVertical: 12,\n    },\n    titleContainer: {\n      flex: 1,\n    },\n    leadingContainer: {\n      marginEnd: 16,\n    },\n    trailingContainer: {\n      marginStart: 16,\n    },\n  }));\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={[styles.contentContainer, contentContainerStyle]}>\n        {!!leading && (\n          <View style={[styles.leadingContainer, leadingContainerStyle]}>\n            {typeof leading === 'function' ? leading({ color: palette.main, size: 24 }) : leading}\n          </View>\n        )}\n        <View style={[styles.titleContainer, titleContainerStyle]}>\n          {typeof title === 'string' ? (\n            <Text variant=\"subtitle1\" style={{ color: palette.main }}>\n              {title}\n            </Text>\n          ) : (\n            title\n          )}\n        </View>\n        {!!trailing && (\n          <View style={[styles.trailingContainer, trailingContainerStyle]}>\n            {typeof trailing === 'function' ? trailing({ color: palette.main, size: 24 }) : trailing}\n          </View>\n        )}\n      </View>\n      {typeof divider === 'boolean' ? divider && <Divider /> : divider}\n    </View>\n  );\n};\n\nexport default BackdropSubheader;\n"]},"metadata":{},"sourceType":"module"}