{"ast":null,"code":"import React from 'react';\nimport { View } from 'react-native';\nimport chroma from 'chroma-js';\nimport { useTheme } from './base/ThemeContext';\n\nconst Divider = _ref => {\n  let {\n    color,\n    inset,\n    leadingInset,\n    trailingInset,\n    style\n  } = _ref;\n  const {\n    palette\n  } = useTheme();\n  return /*#__PURE__*/React.createElement(View, {\n    style: [{\n      height: 1,\n      backgroundColor: color !== null && color !== void 0 ? color : chroma(palette.surface.on).alpha(0.08).hex(),\n      marginStart: inset !== null && inset !== void 0 ? inset : leadingInset,\n      marginEnd: inset !== null && inset !== void 0 ? inset : trailingInset\n    }, style]\n  });\n};\n\nexport default Divider;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAoBC,IAApB,QAA2C,cAA3C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAcA,MAAMC,OAA+B,GAAGC,QAA0D;EAAA,IAAzD;IAAEC,KAAF;IAASC,KAAT;IAAgBC,YAAhB;IAA8BC,aAA9B;IAA6CC;EAA7C,IAAyDL;EAChG,MAAM;IAAEM;EAAF,IAAcR,QAAQ,EAA5B;EACA,oBACEH,oBAACC,IAAD;IACES,KAAK,EAAE,CACL;MACEE,MAAM,EAAE,CADV;MAEEC,eAAe,EAAEP,KAAF,SAAEA,SAAF,WAAEA,WAASJ,MAAM,CAACS,OAAO,CAACG,OAARH,CAAgBI,EAAjB,CAANb,CAA2Bc,KAA3Bd,CAAiC,IAAjCA,EAAuCe,GAAvCf,EAF5B;MAGEgB,WAAW,EAAEX,KAAF,SAAEA,SAAF,WAAEA,WAASC,YAHxB;MAIEW,SAAS,EAAEZ,KAAF,SAAEA,SAAF,WAAEA,WAASE;IAJtB,CADK,EAOLC,KAPK;EADT,EADF;AAFF;;AAiBA,eAAeN,OAAf","names":["React","View","chroma","useTheme","Divider","_ref","color","inset","leadingInset","trailingInset","style","palette","height","backgroundColor","surface","on","alpha","hex","marginStart","marginEnd"],"sources":["/home/francecsco/Scrivania/Sito-React/node_modules/@react-native-material/core/lib/module/Divider.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport chroma from 'chroma-js';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface DividerProps {\n  color?: string | undefined;\n\n  inset?: number | undefined;\n\n  leadingInset?: number | undefined;\n\n  trailingInset?: number | undefined;\n\n  style?: StyleProp<ViewStyle> | undefined;\n}\n\nconst Divider: React.FC<DividerProps> = ({ color, inset, leadingInset, trailingInset, style }) => {\n  const { palette } = useTheme();\n  return (\n    <View\n      style={[\n        {\n          height: 1,\n          backgroundColor: color ?? chroma(palette.surface.on).alpha(0.08).hex(),\n          marginStart: inset ?? leadingInset,\n          marginEnd: inset ?? trailingInset,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default Divider;\n"]},"metadata":{},"sourceType":"module"}